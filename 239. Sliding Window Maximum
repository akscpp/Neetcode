class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int>dq;
        int n=nums.size();
        vector<int>ans;
        for(int i=0;i<k;i++){
            if(dq.empty()){
                dq.push_front(i);
            }else{
                while(!dq.empty() && nums[i]>=nums[dq.back()]){
                    dq.pop_back();
                }
                dq.push_back(i);
            }
        }
        ans.push_back(nums[dq.front()]);

        for(int i=k;i<n;i++){
            if(i-dq.front()>=k){
                dq.pop_front();
            }
            while(!dq.empty() && nums[dq.back()]<nums[i]){
                dq.pop_back();
            }
            if(dq.empty()){
                dq.push_front(i);
                ans.push_back(nums[i]);
            }else{
                dq.push_back(i);
                ans.push_back(nums[dq.front()]);
            }
        }
        return ans;
    }
};
